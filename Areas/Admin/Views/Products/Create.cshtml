@using DataAccess.Entities
@using Microsoft.Ajax.Utilities
@model SklepInternetowy.Areas.Admin.Models.ProductModel
           

@{
    ViewBag.Title = "Dodaj nowy produkt";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@if(TempData["error"] != null)
{
    <div class="row">
        <div class="col-lg-12">
            <div class="alert alert-danger alert-dismissable">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                  @TempData["error"]
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-lg-12">
        <div class="pull-right" style="margin-bottom: 10px;">
            <a class="btn btn-default" href="@Url.Action("Index")">Wróć do listy</a>
        </div>
    </div> 
    <div class="col-lg-12">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <i class="fa fa-bar-chart-o"></i>
                    Nowy produkt
                </h3>
            </div>
            <div class="panel-body">
                <div id="main" style="position: relative">

                    @{Html.BeginForm();}
                    @Html.ValidationSummary(true)
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <label>Nazwa</label>
                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control input" })
                        <font color="Red">@Html.ValidationMessageFor(model => model.Name)</font>
                    </div>

                    <div class="form-group">
                        <label>Opis</label>
                        @Html.TextAreaFor(x => x.Description, new { @class = "form-control input" })
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>

                    <div class="form-group">
                        <label>Cena (zł)</label>
                        @Html.TextBoxFor(x => x.Price, new { @class = "form-control input" })
                        <font color="Red">@Html.ValidationMessageFor(model => model.Price)</font>
                    </div>

                    <div class="form-group">
                        <label>Ilość (szt.)</label>
                        @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control input" })
                        <font color="Red">@Html.ValidationMessageFor(model => model.Quantity)</font>
                    </div>

                    <div class="form-group">
                        <label>Wybierz producenta</label>
                        <select id="Manufacturer" name="Manufacturer" class="form-control">
                            @foreach (SelectListItem item in ViewBag.Manufacturers)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.Manufacturer)
                    </div>
                    
                    <div class="form-group">
                        <label>Wybierz kategorię</label>
                        <select id="Category" name="Category" class="form-control">
                            @foreach (SelectListItem item in ViewBag.Categories)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.Category)
                    </div>

                    <div class="form-group">
                        <input type="submit" class="btn btn-success" value="Dodaj" />
                    </div>
                    @{Html.EndForm();}
                </div>
            </div>
        </div>
    </div>
</div>



